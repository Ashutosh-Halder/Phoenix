"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Gets the IDs of all blocks contained on a page starting from a root block ID.
 */
exports.getPageContentBlockIds = (recordMap, blockId) => {
    var _a, _b, _c, _d, _e;
    const rootBlockId = blockId || Object.keys(recordMap.block)[0];
    const contentBlockIds = new Set();
    function addContentBlocks(blockId) {
        var _a;
        if (contentBlockIds.has(blockId))
            return;
        contentBlockIds.add(blockId);
        const block = (_a = recordMap.block[blockId]) === null || _a === void 0 ? void 0 : _a.value;
        if (!block)
            return;
        const { content, type } = block;
        if (!content)
            return;
        if (type === 'page' && blockId !== rootBlockId) {
            // ignore subpages
            return;
        }
        for (const blockId of content) {
            addContentBlocks(blockId);
        }
    }
    addContentBlocks(rootBlockId);
    for (const blockId of Object.keys(recordMap.block)) {
        const block = (_a = recordMap.block[blockId]) === null || _a === void 0 ? void 0 : _a.value;
        if (!block)
            continue;
        const { properties } = block;
        if (properties) {
            // TODO: this needs some love, especially for resolving relation properties
            // see this collection_view_page for an example: 8a586d253f984b85b48254da84465d23
            for (const key of Object.keys(properties)) {
                const p = properties[key];
                p.map((d) => {
                    var _a, _b, _c, _d;
                    const value = (_c = (_b = (_a = d) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b[1]) === null || _c === void 0 ? void 0 : _c[0];
                    if (((_d = value) === null || _d === void 0 ? void 0 : _d[0]) === 'p') {
                        contentBlockIds.add(value[1]);
                    }
                });
                // [["â€£", [["p", "841918aa-f2a3-4d4c-b5ad-64b0f57c47b8"]]]]
                const value = (_d = (_c = (_b = p) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c[1]) === null || _d === void 0 ? void 0 : _d[0];
                if (((_e = value) === null || _e === void 0 ? void 0 : _e[0]) === 'p') {
                    contentBlockIds.add(value[1]);
                }
            }
        }
    }
    return Array.from(contentBlockIds);
};
//# sourceMappingURL=get-page-content-block-ids.js.map